from os import makedirs, listdir, remove
from os.path import isfile, join, isdir, getmtime
from xml.dom import minidom
from datetime import datetime
from ClasesGenericas import WriteLog, RWConfig
import smtplib
import email

###Global Variables
nameClass = "SendEmail-v1"
logFile = "C:\\LOG\\" + nameClass
nomCliente = "ClientePrueba"
nomArchivo = "C:\\LOG\\NOMARCHIVOCONF"
cadena = "(Correo Enviado Automaticamente Por KOKAI WEB) \n"

###Configuration Variables
actualMode = "TEST"
emailAdd = ""
password = ""
smtp = ""
puerto = ""
nomArchivoAux = ""
nomClienteAux = "" 
nomClassAux = ""

###Get Configuration from XML file KOKAI.CONF
def getConfiguration():
	nameFunction = "getConfiguration"

	global actualMode
	global emailAdd
	global password
	global smtp
	global puerto

	try:
		if(nomArchivoAux == ""):
			setConfigurationSendEmail(nomArchivo, nomCliente, nameClass)
			
		RWConfig.setConfigurationRWConfig(nomArchivoAux, nomClienteAux, nomClassAux)
		WriteLog.setConfigurationWriteLog(nomArchivoAux, nomClienteAux, nomClassAux)
		
		actualMode = RWConfig.readData("actualMode")
		emailAdd = RWConfig.readData("email")
		password = RWConfig.readData("password")
		smtp = RWConfig.readData("smtp")
		puerto = RWConfig.readData("puerto")

	except Exception as err:
		WriteLog.writeLog(nameFunction, err)
	return

###Set Configuration for class
def setConfigurationSendEmail(nomArchivo1, nomCliente1, nameClass1):
	nameFunction = "setConfigurationSendEmail"

	global nomArchivoAux
	global nomClienteAux 
	global nomClassAux

	try:
		nomArchivoAux = nomArchivo1
		nomClienteAux = nomCliente1
		nomClassAux = nameClass1
	except Exception as err:
		WriteLog.writeLog(nameFunction, err)
	return

def updateMessage(parteMensaje):
	nameFunction = "updateMessage"

	global cadena
	
	try:
		cadena = cadena + parteMensaje
	except Exception as err:
		WriteLog.writeLog(nameFunction, err)
	return

###Send email to agency
def sendEmailNow(receivers, subject):
	nameFunction = "sendEmailNow"

	global cadena

	try:
		###--------------
			#sender = 'gop_19@hotmail.com'
			###receivers = ['soportes@skyconsolidator.com'] 
			###receivers = ['CORREOCAJA']
			###receivers = ['gabriela.olavarrieta@travelport.com']
		 ###--------------

		if(actualMode == 'TEST'):
			cadena = ("<--PRUEBA-->" +
				"\nDATO1: " + "infoRECLOC" +
				"\nDATO2: " + "infoDATE" +
				"\nDATO3: " + "infoTIME" +
				"\n\n ------------DATOS AGENCIA------------" +
				"\nDATO4: " + "infoAGENCIA[:-1]" +
				"\nDATO5: " + "infoPSEUDOCREADOR" +
				""
				)
		print(cadena)

		sender = emailAdd
		msg = email.message_from_string(cadena)
		msg['From'] = sender
		msg['To'] = ", ".join(receivers)
		msg['Subject'] = subject

		contraseñaSoporteD = RWConfig.desencripta(password).decode(encoding="utf-8", errors="strict")

		
		s=smtplib.SMTP()

		s.connect(smtp,puerto)
		###--------------
                        ###s=smtplib.SMTP(host=smtp, port=puerto)
			###s=smtplib.SMTP()
                        ###s.connect('smtp.live.com',587)
			###s.connect('smtp.gmail.com',587)
			###s.connect('smtp.office365.com',587)
			###s.connect('132.245.25.2',587)
			###s.connect('132.245.25.2')
		###--------------

		###--------------
			#CON HOT
                        ###s=smtplib.SMTP(host="smtp.live.com", port=587)
			#CON GMAIL U OTRO
			#s=smtplib.SMTP(host="smtp.gmail.com", port=587)
		###--------------
		
		s.ehlo()
		s.starttls()
		s.ehlo()

		#### s.login(sender, "CONTRASENA")
		s.login(sender, contraseñaSoporteD)
		s.sendmail(sender, receivers,  msg.as_string())
		print ("Successfully sent email")
			
	except Exception as err:
		WriteLog.writeLog(nameFunction, err)
	return


###Creates new file
def createFile(src, fileInside, dot, last, numLine):
	nameFunction = "createFile"
	try:
		file = open(src, 'r')
		dst = copyDAT + "v" + str(numLine) + fileInside
		if(isfile(dst) == True):
			fileCopy = open(dst, 'w')
		else:
			fileCopy = open(dst, 'w+')

		numLine = 0
		for line in file:
			if numLine == 0:
				fileCopy.write("\n")
			numLine = numLine + 1;
			if numLine >= dot-1 and numLine <= last:
				lineAux = line.replace("ML0504\0\0","")
				line = lineAux.replace("ML0504  ","")
				fileCopy.write(line)
		file.close()
		fileCopy.close()
	except Exception as err:
		WriteLog.writeLog(nameFunction, err)

	return


###Main
def main():
	nameFunction = "main"
	try:
	#if (True==True):
		getConfiguration()
		
		if(actualMode == 'TEST'):
			print ("PROCESANDO, tardara varios minutos...")
			startTime = WriteLog.writeStart()
		if(actualMode == 'ON' or actualMode == 'TEST'):
			sendEmailNow(['gaby@kokai.com.mx'], "[Correo Prueba] Pythonsubject")
		else:
			print("Modo App: " + actualMode)
			
		if(actualMode == 'TEST'):
			print ("DONE")
			WriteLog.writeEnd(startTime)
			
	except Exception as err:
		WriteLog.writeLog(nameFunction, err)
	return

if __name__ == "__main__": main()
